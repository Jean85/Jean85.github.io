<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alessandro Lai</title>
    <link>https://alessandrolai.dev/</link>
    <description>Recent content on Alessandro Lai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://alessandrolai.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paraunit 2.5.0: PHPUnit 12 &amp; PHP 8.4 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.5.0/</link>
      <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.5.0/</guid>
      <description>&lt;p&gt;This new release includes the official support to PHPUnit 12, which did not need any code changes, just some CI fixes and the common Composer constraint widening. The biggest amount of work came just from upgrading (and pulling the forks) from the Prophecy toolchain, to make the CI work without waiting for their releases.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.1.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.1.0/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.1.0/</guid>
      <description>&lt;p&gt;This small minor is just a refresh which bumps a couple of requirements to reduce the CI and maintenance footprint, alongside testing the package against the coming PHP 8.4.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminable Loop Command 1.2.3</title>
      <link>https://alessandrolai.dev/releases/terminable-loop-command/1.2.3/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/terminable-loop-command/1.2.3/</guid>
      <description>&lt;p&gt;This small new patch just adds support for PHP 8.4, with the resolution of one single deprecation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.3.1: fix option with chunked execution</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.3.1/</link>
      <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.3.1/</guid>
      <description>&lt;p&gt;This patch, on the old 1.x branch, was prompted by a bug found by a colleague: using &lt;code&gt;--testsuite&lt;/code&gt; with chunked execution made PHPUnit execute no tests.&lt;/p&gt;&#xA;&lt;p&gt;Luckily, the bug does not affect the 2.x branch, but I ported the regression test anyway.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.4.0: add two new options</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.4.0/</link>
      <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.4.0/</guid>
      <description>&lt;p&gt;This new release comes thanks to a new contributor: thanks &lt;a href=&#34;https://github.com/raffaelecarelle&#34;&gt;@raffaelecarelle&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;He contributed the support of two native PHPUnit options with &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/273&#34;&gt;a single pull request&lt;/a&gt;: &lt;code&gt;--exclude-testsuite&lt;/code&gt; and &lt;code&gt;--test-suffix&lt;/code&gt;. Both these options allow the user to filter and exclude tests from the execution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.3.4: fix PHPUnit 11.3 compat</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.3.4/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.3.4/</guid>
      <description>&lt;p&gt;This small patch release is fully due to external contributions: thanks &lt;a href=&#34;https://github.com/kubawerlos&#34;&gt;@kubawerlos&lt;/a&gt;!&lt;/p&gt;&#xA;&lt;p&gt;He contributed two different patches, one to update the &lt;code&gt;.gitattributes&lt;/code&gt; exclusion list, the second to fix some constraint on some dependencies that where preventing PHPUnit 11.3 from being installed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.3.3: fix warning</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.3.3/</link>
      <pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.3.3/</guid>
      <description>&lt;p&gt;I got a bug report saying that the Symfony PHPUnit Bridge 6.4.8 and 7.0.8 and higher made test runs with Paraunit fail due to a warning. At first I thought that the Symfony error handler was messing with PHPUnit&amp;rsquo;s again, but in reality it was just making explicit a warning that was already there for ages.&lt;/p&gt;&#xA;&lt;p&gt;This simple patch avoids generating that warning, and makes your CI green again!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Messenger: the sharpest tool in your PHP toolbox</title>
      <link>https://alessandrolai.dev/talks/2024-phpday-symfony-messenger/</link>
      <pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2024-phpday-symfony-messenger/</guid>
      <description>&lt;p&gt;The PHP ecosystem is very rich and mature, and offers you a lot of stable and widely used tools, frameworks and libraries. Symfony evolved long ago from a monolithic framework into a collection of very useful and reliable components, but one component in particular (in my opinion) really stands out: &lt;strong&gt;Symfony Messenger&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In a single package, you have an easy way to dispatch messages and tasks to sync and async handling, with enough abstraction to support a variety of transports natively, and a long list of useful patterns already implemented and ready to be used out of the box.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.3.2: fix files recap</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.3.2/</link>
      <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.3.2/</guid>
      <description>&lt;p&gt;I noticed that, since Paraunit 2, the recap at the end of the execution got very long. This was due to an improper serialization of the logs, where the test name was treated as a generic &lt;code&gt;Test&lt;/code&gt; value object instead of a specific &lt;code&gt;TestMethod&lt;/code&gt; one, where the class name is shown split form the method name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminable Loop Command 1.2.2</title>
      <link>https://alessandrolai.dev/releases/terminable-loop-command/1.2.2/</link>
      <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/terminable-loop-command/1.2.2/</guid>
      <description>&lt;p&gt;This small new patch, released after nearly a year from the last one, just adds support for Symfony 7; it didn&amp;rsquo;t require any code change.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.4.0</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.4.0/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:01 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.4.0/</guid>
      <description>&lt;p&gt;This new minor should just add support for Symfony 7, but in reality it contains a lot of work. The CI for this library wasn&amp;rsquo;t active for a long time, so a lot of issues and deprecations where making it fail&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Functional test case 1.3.0</title>
      <link>https://alessandrolai.dev/releases/symfony-functional-testcase/1.3.0/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/symfony-functional-testcase/1.3.0/</guid>
      <description>&lt;p&gt;This small new release just adds support to Symfony 7; it was needed while doing the same work on the &lt;code&gt;facile-it/mongodb-messenger-transport&lt;/code&gt; package.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DoctrineMySQLComeBack 3.0.0: DBAL 4 support</title>
      <link>https://alessandrolai.dev/releases/doctrine-mysql-come-back/3.0.0/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/doctrine-mysql-come-back/3.0.0/</guid>
      <description>&lt;p&gt;The &lt;code&gt;facile-it/doctrine-mysql-come-back&lt;/code&gt; had a major release last year, and it included a lot of changes to support DBAL 3. Luckily, with DBAL 4, the amount of changes is a lot smaller, mainly signature changes. In short, all the changes done during the last major bump allowed us to not have to do much for this new release.&lt;/p&gt;&#xA;&lt;p&gt;May thanks to &lt;a href=&#34;https://github.com/oleg-andreyev&#34;&gt;@oleg-andreyev&lt;/a&gt; for doing the initial work and PR to kickstart this release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0.6</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.6/</link>
      <pubDate>Fri, 08 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.6/</guid>
      <description>&lt;p&gt;This last small patch comes after more than 2 years from the last one, as a proof that this is a pretty stable package. In this case, most of the changes are not user facing (CI tests, new code style rules), but there&amp;rsquo;s also some improvements in the packaging, with the exclusion of some files from the distributed version.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.3.1: fix PHPUnit 11 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.3.1/</link>
      <pubDate>Tue, 06 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.3.1/</guid>
      <description>&lt;p&gt;I may have jumped the gun while releasing the PHPUnit 11 compat, and I didn&amp;rsquo;t check that the CI was actually installing it. Unfortunately there were multiple dependencies still conflicting with it, and Prophecy needed some PRs to be compatible. I filed them and used them in my CI, so that now the compatibility is checked.&lt;/p&gt;&#xA;&lt;p&gt;I needed to do multiple changes to make the CI green, but still no code changes was needed, only a widening of &lt;code&gt;composer.json&lt;/code&gt; constraints and some tests &amp;amp; CI fixes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.3.0: PHPUnit 11 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.3.0/</link>
      <pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.3.0/</guid>
      <description>&lt;p&gt;On the same day of &lt;a href=&#34;https://phpunit.de/announcements/phpunit-11.html&#34;&gt;PHPUnit 11.0.0 release&lt;/a&gt;, I&amp;rsquo;m able to release a minor version of Paraunit that supports it, and &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/225&#34;&gt;no code change was necessary&lt;/a&gt;! You may still be impacted by PHPUnit&amp;rsquo;s breaking changes and require to adjust your tests accordingly, but Paraunit can be upgraded before with no hassle (provided that you have at least PHPUnit 10.5.4 already installed), since it&amp;rsquo;s cross-compatible between the two major versions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.2.2: PHPUnit 10.4 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.2.2/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.2.2/</guid>
      <description>&lt;p&gt;This is a small patch to smooth the compatibility with the new release of PHPUnit, 10.4. Previous versions would still work fine, but I took the time to fix all the tests (that were broken due to reliance on &lt;code&gt;@internal&lt;/code&gt; code such as PHPUnit events) and to add support for the new CLI options regarding the errors baseline.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.2.3: Symfony 7 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.2.3/</link>
      <pubDate>Fri, 06 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.2.3/</guid>
      <description>&lt;p&gt;This another small patch is to allow using Paraunit with Symfony 7, which was released just yesterday. The &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/220&#34;&gt;related PR&lt;/a&gt; needed just to fix a couple of return types. Paraunit should work flawlessly with PHP 8.3 too, which was released a couple of day prior, but I had to revert the additional CI job because &lt;a href=&#34;https://github.com/facile-it/paraunit/actions/runs/7044811698/job/19173277683&#34;&gt;Prophecy is not ready yet&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.2.1: report PHPUnit errors</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.2.1/</link>
      <pubDate>Wed, 30 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.2.1/</guid>
      <description>&lt;p&gt;I discovered this bug while trying to upgrade a work project to PHPUnit 10. The issue was caused by an empty data provider.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminable Loop Command 1.2.1</title>
      <link>https://alessandrolai.dev/releases/terminable-loop-command/1.2.1/</link>
      <pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/terminable-loop-command/1.2.1/</guid>
      <description>&lt;p&gt;This small new patch was needed because we discovered that PHP official Docker images override the &lt;code&gt;STOPSIGNAL&lt;/code&gt; directive, using &lt;code&gt;SIGQUIT&lt;/code&gt; instead of &lt;code&gt;SIGTERM&lt;/code&gt; when shutting down a container. Thanks to Gabriele Colombera for providing the PR.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Functional test case 1.2.0</title>
      <link>https://alessandrolai.dev/releases/symfony-functional-testcase/1.2.0/</link>
      <pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/symfony-functional-testcase/1.2.0/</guid>
      <description>&lt;p&gt;This small new release just adds support to Symfony 6.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DoctrineMySQLComeBack 2.0.0: DBAL 3 support</title>
      <link>https://alessandrolai.dev/releases/doctrine-mysql-come-back/2.0.0/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/doctrine-mysql-come-back/2.0.0/</guid>
      <description>The facile-it/doctrine-mysql-come-back was written long time ago by my colleague Luca Boeri, in an attempt to solve the infamous &amp;ldquo;MySQL server has gone away&amp;rdquo; error, and similar issues. It&amp;rsquo;s a simple Doctrine DBAL driver wrapper that catches relevant exceptions from the driver and attempts to reconnect to the database; this is pretty useful if your PHP script is doing something else between queries, and an aggressive timeout from the database truncates the connection in the meantime, due to the prolonged inactivity.</description>
    </item>
    <item>
      <title>Paraunit 2.2.0: add Cobertura coverage report format</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.2.0/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.2.0/</guid>
      <description>&lt;p&gt;This new minor versions adds support for the Cobertura coverage report, which is supported by many services and tool, with GitLab as a prominent one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.1.0: add --sort=random option</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.1.0/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.1.0/</guid>
      <description>&lt;p&gt;This new minor versions adds a new, small feature to support one small sorting option, the random one. This is useful to mix test execution, if you&amp;rsquo;re encountering deadlocks and performance bottlenecks due to the concentration of certain tests in some areas of your test suite.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminable Loop Command 1.2.0</title>
      <link>https://alessandrolai.dev/releases/terminable-loop-command/1.2.0/</link>
      <pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/terminable-loop-command/1.2.0/</guid>
      <description>&lt;p&gt;This new minor release is a maintenance one, which drops support for older (and EOLed) PHP &amp;amp; Symfony versions; this allowed me to bump all the development dependencies and streamline the CI flow.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 2.0.0: PHPUnit 10 support and a big internal refactor</title>
      <link>https://alessandrolai.dev/releases/paraunit/2.0.0/</link>
      <pubDate>Mon, 06 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/2.0.0/</guid>
      <description>&lt;p&gt;This new major version has seen its inception a long time ago, on &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/162&#34;&gt;October 2021&lt;/a&gt;, and it went to sleep for a long time, since PHPUnit development was doing the same. After &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/172&#34;&gt;some additional attempts&lt;/a&gt;, I was finally able to complete this alongside the long-awaited release of PHPUnit 10.&lt;/p&gt;&#xA;&lt;p&gt;All the changes in PHPUnit allowed me to finally bump the minimum PHP version to 8.1 (so that &lt;code&gt;enum&lt;/code&gt;s are now usable!) and do a big refactoring of internals, changing and simplifying the way tests outcome are handled. Also, I took the occasion to clean up all the additional options that were hard-coded, and add the &lt;code&gt;--pass-through&lt;/code&gt; option as a viable alternative.&#xA;The full changelog is small, the changes for the end user are small, but the code changes are a lot!&lt;/p&gt;</description>
    </item>
    <item>
      <title>CTO Luch - Dual Career Ladder</title>
      <link>https://alessandrolai.dev/talks/2023-cto-lunch-dual-career-ladder/</link>
      <pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2023-cto-lunch-dual-career-ladder/</guid>
      <description>&lt;p&gt;&lt;em&gt;Questa è una puntata del podcast CTO Luch, condotto da Alex Pagnoni, a cui sono stato invitato.&lt;/em&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;Dual Career Ladder: come strutturarla al meglio tenendo conto di responsabilità, retribuzione, spazio e ruolo? E come evitare i principali rischi, come quello del burnout dei manager?&lt;/p&gt;</description>
    </item>
    <item>
      <title>CTO Show - Leading a team smarter than you</title>
      <link>https://alessandrolai.dev/talks/2022-cto-show-leading-a-team-smarter-than-you/</link>
      <pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2022-cto-show-leading-a-team-smarter-than-you/</guid>
      <description>&lt;p&gt;&lt;em&gt;Questa è una puntata del podcast CTO Show, condotto da Alex Pagnoni, a cui sono stato invitato.&lt;/em&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;Ti è mai capitato di dover guidare un team di persone senza avere le competenze tecniche necessarie?&#xA;O magari di dover gestire un progetto su un linguaggio di programmazione che proprio non conosci?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.3.0: new chunk size feature, Symfony 6 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.3.0/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.3.0/</guid>
      <description>&lt;p&gt;This new minor release comes after more than a year since the last tag.&lt;/p&gt;&#xA;&lt;p&gt;It actually comes with a couple of new interesting features, one of which is a new behavior for tests parallelization. The new &lt;code&gt;--chunk-size&lt;/code&gt; option, when set at a value higher that &lt;code&gt;1&lt;/code&gt;, will execute more than one test class per single process, making the execution faster for test suites where the class setup is expensive.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP &#43; ES &#43; CQRS &#43; DDD = ? - A planned strategy</title>
      <link>https://alessandrolai.dev/talks/2022-phpday-php-ddd-cqrs-es-planned-strategy/</link>
      <pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2022-phpday-php-ddd-cqrs-es-planned-strategy/</guid>
      <description>&lt;p&gt;DDD, CQRS, Event Sourcing have generated a lot of buzz in recent years, but they seem an unattainable target for the everyday, long running projects we work on. The required amount of knowledge seems unbearable, halting the delivery of business value is not an option, and sticking with the &amp;ldquo;known ways&amp;rdquo; of development seems like a safer bet. In reality, all those approaches have so much in common underneath that applying all of them together makes them collimate toward cleaner and suppler code, with a compound effect on the benefits and a reduced overall cost of implementation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.3.2</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.3.2/</link>
      <pubDate>Mon, 16 May 2022 00:00:01 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.3.2/</guid>
      <description>&lt;p&gt;This new patch adds support for Symfony 6.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Come sfruttare OpenAPI durante lo sviluppo di un API in PHP</title>
      <link>https://alessandrolai.dev/talks/2022-pugmi-come-sfruttare-openapi-durante-sviluppo-api-php/</link>
      <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2022-pugmi-come-sfruttare-openapi-durante-sviluppo-api-php/</guid>
      <description>&lt;p&gt;&lt;em&gt;Questa è la replica di &lt;a href=&#34;https://alessandrolai.dev/talks/2021-sfday-api-contracts-openapi-during-development/&#34;&gt;una presentazione&lt;/a&gt; che ho svolto l&amp;rsquo;anno precedente online al SymfonyDay 2021, anch&amp;rsquo;essa registrata&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Scrivere API è il pane quotidiano di noi sviluppatori web: ormai sono il tassello fondamentale che non manca mai, da colonna portante dei frontend a meccanismo di comunicazione indispensabile tra applicazioni differenti.&lt;/p&gt;&#xA;&lt;p&gt;Ma come possiamo semplificare lo sviluppo di una API e comunicare con l’esterno come questa API funziona?&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.3.1</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.3.1/</link>
      <pubDate>Mon, 07 Feb 2022 00:00:01 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.3.1/</guid>
      <description>&lt;p&gt;This new patch unlocks the possibility of using the JSON serialization with this transport, because it fixes how headers are handled during serialization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0.5</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.5/</link>
      <pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.5/</guid>
      <description>&lt;p&gt;This last small patch handles the same edge case as the previous one, for replaced packages. I also added a CI job to test against PHP 8.1, which is coming in less than 2 months!&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.3.0</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.3.0/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:01 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.3.0/</guid>
      <description>&lt;p&gt;This new minor adds the &lt;code&gt;resettable&lt;/code&gt; option to the transport, so that you can disable it if you need to inspect the transport during tests. This is due to the fact that under Symfony 5.3, if a service implements the &lt;code&gt;ResetInterface&lt;/code&gt; (as our transport does), the &lt;code&gt;reset&lt;/code&gt; method  gets automatically invoked at kernel shutdown, which happens after using the Symfony test client (&lt;code&gt;KernelBrowser&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Functional test case 1.1.2</title>
      <link>https://alessandrolai.dev/releases/symfony-functional-testcase/1.1.2/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/symfony-functional-testcase/1.1.2/</guid>
      <description>&lt;p&gt;This small patch fixes an issue that arises in Symfony 5.3+, where the command tester fails with this error: &lt;code&gt;Cannot retrieve the container from a non-booted kernel.&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Functional test case 1.1.1</title>
      <link>https://alessandrolai.dev/releases/symfony-functional-testcase/1.1.1/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/symfony-functional-testcase/1.1.1/</guid>
      <description>&lt;p&gt;This small patch fixes an issue that arises in Symfony 5.3, where the &lt;code&gt;getContainer&lt;/code&gt; method in the parent class was made non-static; the same issue was encountered and resolved &lt;a href=&#34;https://github.com/liip/LiipFunctionalTestBundle/issues/583&#34;&gt;in the upstream project&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0.4</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.4/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.4/</guid>
      <description>&lt;p&gt;This last small patch had to be rushed out due to &lt;a href=&#34;https://github.com/composer/composer/pull/9816/files&#34;&gt;a deprecation in Composer 2.0.14&lt;/a&gt;. This was triggering failures downstream, like in the Sentry SDK CI.&lt;/p&gt;</description>
    </item>
    <item>
      <title>API contracts: Leveraging OpenAPI during API development</title>
      <link>https://alessandrolai.dev/talks/2021-sfday-api-contracts-openapi-during-development/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2021-sfday-api-contracts-openapi-during-development/</guid>
      <description>&lt;p&gt;Scrivere API è il pane quotidiano di noi sviluppatori web: ormai sono il tassello fondamentale che non manca mai, da colonna portante dei frontend a meccanismo di comunicazione indispensabile tra applicazioni differenti.&lt;/p&gt;&#xA;&lt;p&gt;Ma come possiamo semplificare lo sviluppo di una API e comunicare con l’esterno come questa API funziona?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.2.1: allow jean85/pretty-package-versions v2</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.2.1/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.2.1/</guid>
      <description>&lt;p&gt;This small patch is just to allow a dependency bump for end users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.2.0</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.2.0/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:01 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.2.0/</guid>
      <description>&lt;p&gt;This other new minor, released on the same day of the previous one, was needed to release support for PHP 8, since it also required to drop support for PHP 7.2 at the same time. Having two separate releases allows end users to have a smoother upgrade path, and me the possibility to release patches in both minors if needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.1.0</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.1.0/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.1.0/</guid>
      <description>&lt;p&gt;This new, first minor of this package handles two issues coming from the upstream, Symfony Messenger package. In both cases the originating cause was the addition of the new &lt;code&gt;ErrorDetailsStamp&lt;/code&gt;, which will be the future way to store failure information in messages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Functional test case 1.1.0</title>
      <link>https://alessandrolai.dev/releases/symfony-functional-testcase/1.1.0/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/symfony-functional-testcase/1.1.0/</guid>
      <description>&lt;p&gt;This new minor adds support for using the library with PHP 8.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminable Loop Command 1.1.0</title>
      <link>https://alessandrolai.dev/releases/terminable-loop-command/1.1.0/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/terminable-loop-command/1.1.0/</guid>
      <description>&lt;p&gt;This is just a small upgrade of a very stable package, that adds support for PHP 8 and Symfony 5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0.3</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.3/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.3/</guid>
      <description>&lt;p&gt;This last small patch publishes a new constant to make the &amp;ldquo;no reference&amp;rdquo; text available to end users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.6.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.6.0/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.6.0/</guid>
      <description>&lt;p&gt;This small patch adds a small FC (forward compatibility) layer to the 1.x series, by adding the new methods introduced in the 2.0 release. This should ease the support for both major versions at the same time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0.2</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.2/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.2/</guid>
      <description>&lt;p&gt;This small patch handles a couple of new bugs that got discovered through &lt;a href=&#34;https://github.com/getsentry/sentry-symfony/issues/435&#34;&gt;an issue on `sentry-symfony&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0.1</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.1/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.1/</guid>
      <description>&lt;p&gt;This small patch handles replaced and provided packages, so that consumers of this library can handle bad requests gracefully.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Symfony functional testing toolbox</title>
      <link>https://alessandrolai.dev/talks/2021-pugmi-my-functional-testing-toolbox/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2021-pugmi-my-functional-testing-toolbox/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the italian version of a talk that I did &lt;a href=&#34;https://alessandrolai.dev/talks/2020-sfday-my-functional-testing-toolbox/&#34;&gt;two months before at SFDay 2020&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 2.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/2.0.0/</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/2.0.0/</guid>
      <description>&lt;p&gt;This new major release of this package was long awaited by me, since it&amp;rsquo;s a comeback of the 1.3 release, that was rolled back. Now, after more than 22 million downloads and the stable release of Composer 2, it&amp;rsquo;s time to use it!&lt;/p&gt;&#xA;&lt;p&gt;The breaking changes are reduced to a minimum to allow a smoother upgrade path; if you use this package in a library, you&amp;rsquo;re encouraged to require it with a constraint of &lt;code&gt;^1.5 || ^2.0&lt;/code&gt;, to obtain all the functionalities without constraining your end users to upgrade immediately to Composer 2.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Symfony functional testing toolbox</title>
      <link>https://alessandrolai.dev/talks/2020-sfday-my-functional-testing-toolbox/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2020-sfday-my-functional-testing-toolbox/</guid>
      <description>&lt;p&gt;When testing the PHP side of a Symfony application, tests are normally split into unit and functional: the former do not need anything in addition to some proficiency, due to their small size and isolated execution; the latter instead are more complex, slower and sometimes more brittle, because they use more components, and they involve the framework and the libraries used to build the app.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony Functional test case 1.0.0</title>
      <link>https://alessandrolai.dev/releases/symfony-functional-testcase/1.0.0/</link>
      <pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/symfony-functional-testcase/1.0.0/</guid>
      <description>&lt;p&gt;This is finally the stable release of this forked library, and it only bumps the PHP requirement to PHP 7.2, everything else is the same.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.2.0: PHP 8 &amp; PHPUnit 9.3 support</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.2.0/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.2.0/</guid>
      <description>&lt;p&gt;This release contains only support for newer versions of PHP &amp;amp; PHPUnit; due to PHPUnit 9.3 requiring a new major version of &lt;code&gt;phpunit/php-code-coverage&lt;/code&gt;, I&amp;rsquo;m forced to drop support to all PHPUnit versions below 9.3. Usage of Paraunit is unchanged.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.5.1</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.5.1/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.5.1/</guid>
      <description>&lt;p&gt;This small patch adds support for the upcoming PHP 8.0 release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes for PHP developers</title>
      <link>https://alessandrolai.dev/talks/2020-phpday-k8s-for-php-developers/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2020-phpday-k8s-for-php-developers/</guid>
      <description>&lt;p&gt;Docker has slowly won the hearth of many developers as a good, flexible and reliable tool to build local environments for web apps, but containers in production were still a myth for a long time.&lt;/p&gt;&#xA;&lt;p&gt;Now, with the advent of Kubernetes (k8s), deploying (PHP) applications with containers is the new shiny tool, but the huge amount of new concepts and technologies scares a lot of people away.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB Messenger Transport 1.0.0</title>
      <link>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.0.0/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/mongodb-messenger-transport/1.0.0/</guid>
      <description>&lt;p&gt;This is the first, stable release of this library that I built on top of &lt;a href=&#34;https://github.com/facile-it/mongodb-bundle/&#34;&gt;&lt;code&gt;facile-it/mongodb-bundle&lt;/code&gt;&lt;/a&gt;, which allows to use the MongoDB connection provided by the bundle to be used as a Symfony Messenger transport. I build this because I needed the equivalent of the Doctrine transport to store failed messages on a project that didn&amp;rsquo;t use Doctrine, but our OSS MongoDB bundle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.1.1: PostgreSQL retry support</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.1.1/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.1.1/</guid>
      <description>&lt;p&gt;This small path adds detection for deadlocks during test execution when using PostgreSQL, thanks to an external contributor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.4.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.4.0/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.4.0/</guid>
      <description>&lt;p&gt;This version attempts to support Composer 2 directly, by dropping dependencies and using the Composer 2 API directly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.5.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.5.0/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.5.0/</guid>
      <description>&lt;p&gt;This release is intended to change the future release plan of this package. Please require the package with &lt;code&gt;^1.5 || ^2.0&lt;/code&gt; to ensure full functionalities and future Composer 2 compatibility.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.3.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.3.0/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.3.0/</guid>
      <description>&lt;p&gt;Thanks to the work of the Composer maintainers, &lt;code&gt;ocramius/package-versions&lt;/code&gt; has been forked to backport support back to PHP 7.0, while maintaining Composer 2 compatiblity. This new version leverages this fork.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.1.0: PHPUnit 9.1 and internal refactor</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.1.0/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.1.0/</guid>
      <description>&lt;p&gt;As reported &lt;a href=&#34;https://alessandrolai.dev/news/release/1.0.1&#34;&gt;in the previous release&lt;/a&gt;, I was working on &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/149&#34;&gt;supporting PHPUnit 9&lt;/a&gt;. Today, PHPUnit 9.1 was released, and so I&amp;rsquo;ve released Paraunit 1.1.0, which supports &lt;em&gt;only&lt;/em&gt; PHPUnit 9.1 and forward: this is due to the fact that the &lt;code&gt;--printer&lt;/code&gt; option got deprecated, so I have to switch approach to have a working solution for the foreseeable future. In this case, I switched to using &lt;code&gt;TestHook&lt;/code&gt;, and opted for a small refactor of how Paraunit fetches PHPUnit test results.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.0.1: two small fixes</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.0.1/</link>
      <pubDate>Mon, 23 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.0.1/</guid>
      <description>&lt;p&gt;While I&amp;rsquo;m actively working on a big refactor toward &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/149&#34;&gt;supporting PHPUnit 9&lt;/a&gt;, I&amp;rsquo;ve found two small fixes that have to be released as the first stable patch since the 1.0 release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.0.0: the stable release</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.0.0/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.0.0/</guid>
      <description>&lt;p&gt;Today I decided to release &lt;code&gt;facile-it/paraunit&lt;/code&gt; &lt;code&gt;1.0.0&lt;/code&gt;! In reality the package was pretty stable and widely used at Facile.it for a long time, but right now I wanted to step forward and declare it officially stable.&lt;/p&gt;&#xA;&lt;p&gt;The main reason behind this is that I&amp;rsquo;m currently working &lt;a href=&#34;https://github.com/facile-it/paraunit/pull/149&#34;&gt;on PHPUnit 9 support&lt;/a&gt;, and this will force me to release a new minor that will drop support for previous PHPUnit version altogether. This decision was in reality forced onto me due to the fact that PHUnit 9 drops support for the &lt;code&gt;--printer&lt;/code&gt; CLI option and the relative extension point, which Paraunit was using as a way to extract test results.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 1.0.0-beta2: Pcov support</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.0.0-beta2/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.0.0-beta2/</guid>
      <description>&lt;p&gt;I returned to develop some more on Paraunit in the last months, initially to add a few new compatibilities (PHP 7.4, Symfony 5), but then I spent some time to add support for Pcov as a coverage driver.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code reviews -  How-to, do &amp; dont&#39;s</title>
      <link>https://alessandrolai.dev/talks/2020-01-facile-it-code-review/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2020-01-facile-it-code-review/</guid>
      <description></description>
    </item>
    <item>
      <title>Adding Event Sourcing to an existing PHP project (for the right reasons)</title>
      <link>https://alessandrolai.dev/talks/2019-symfonycon-event-sourcing/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2019-symfonycon-event-sourcing/</guid>
      <description>&lt;p&gt;&lt;em&gt;Watch the video of this talk for free on &lt;a href=&#34;https://symfonycasts.com/screencast/symfonycon2019/adding-event-sourcing-to-an-existing-php-project-for-the-right-reasons&#34;&gt;SymfonyCasts&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;Event Sourcing&amp;rdquo;, along with &amp;ldquo;CQRS&amp;rdquo;, have recently become trending terms, and now there is so much theory, blog posts and talks about them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony ❤︎ Kubernetes: dynamic feature-review environments</title>
      <link>https://alessandrolai.dev/talks/2019-codemotion-symfony-loves-k8s/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2019-codemotion-symfony-loves-k8s/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a replica of &lt;a href=&#34;https://alessandrolai.dev/talks/2019-sfday-symfony-loves-k8s/&#34;&gt;the talk&lt;/a&gt; that I did the week before at SFDay 2019, where there&amp;rsquo;s video recording available.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony ❤︎ Kubernetes: dynamic feature-review environments</title>
      <link>https://alessandrolai.dev/talks/2019-sfday-symfony-loves-k8s/</link>
      <pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2019-sfday-symfony-loves-k8s/</guid>
      <description>&lt;p&gt;Docker has been a part of our development environments for long as of now. But its usage in production had not followed the same adoption curve, and it&amp;rsquo;s instead rising only in the last years, mainly due to Kubernetes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes ❤ PHP</title>
      <link>https://alessandrolai.dev/talks/2019-pugmi-k8s-loves-php/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2019-pugmi-k8s-loves-php/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a replica of &lt;a href=&#34;https://alessandrolai.dev/talks/2019-cloudconf-k8s-loves-php/&#34;&gt;the talk&lt;/a&gt; that I did two months before at CloudConf 2019, followed by a live coding demonstration&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminable Loop Command 1.0</title>
      <link>https://alessandrolai.dev/releases/terminable-loop-command/1.0.0/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/terminable-loop-command/1.0.0/</guid>
      <description>This is the first release of this package! It&amp;rsquo;s Shell+PHP combination to run Symfony console commands in loop under a daemon or Kubernetes, instead of using a long running process.&#xA;This package contains a shell script and an abstract Symfony Console Command class; you need to write your command extending that class, and launch it through the shell script. Ideally, the script has to be used as a container entry point, and/or launched with a supervisor, like Docker Compose, Kubernetes, supervisord.</description>
    </item>
    <item>
      <title>Paraunit 1.0.0-beta1: the first approach to a stable release</title>
      <link>https://alessandrolai.dev/releases/paraunit/1.0.0-beta1/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/1.0.0-beta1/</guid>
      <description>&lt;p&gt;After a long hiatus, I decided to start working in the first stable release of Paraunit; the package is good and running smoothly for years, so we no longer have any reason to delay the 1.0 further. This will also be the occasion to force some static analysis onto the codebase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes ❤ PHP</title>
      <link>https://alessandrolai.dev/talks/2019-cloudconf-k8s-loves-php/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2019-cloudconf-k8s-loves-php/</guid>
      <description></description>
    </item>
    <item>
      <title>Adding Event Sourcing to an existing PHP project (for the right reasons)</title>
      <link>https://alessandrolai.dev/talks/2018-symfonyday-event-sourcing/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2018-symfonyday-event-sourcing/</guid>
      <description>&lt;p&gt;&amp;ldquo;Event Sourcing&amp;rdquo;, along with &amp;ldquo;CQRS&amp;rdquo; (Command Query Responsibility Segregation), have recently become trending terms, and now there is so much theory, blog posts and talks about them.&lt;/p&gt;&#xA;&lt;p&gt;However, most of these deal with the problem starting from an utopian assumption: having to write a project from scratch (greenfield), but at the same time with a high domain complexity right from the start, enough to justify the use of a complex technique like event sourcing and CQRS, which carry a fair amount of inherent complexity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony &#43; Docker, dall&#39;ambiente di sviluppo alla produzione</title>
      <link>https://alessandrolai.dev/talks/2018-symfonyday-symfony-docker/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2018-symfonyday-symfony-docker/</guid>
      <description>&lt;p&gt;Docker è una tecnologia che ormai ha preso largamente piede negli ambienti di sviluppo di applicazioni web: da anni ormai è una alternativa superiore alle classiche macchine virtuali, molto più avide di risorse hardware.&lt;/p&gt;&#xA;&lt;p&gt;Il passaggio però all&amp;rsquo;ambiente di produzione è stato molto meno &amp;ldquo;&amp;ldquo;virale&amp;rdquo;&amp;rdquo; e si fatica ancora a trovare risorse e consigli su come portare la propria applicazione in produzione usando Docker e i container.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Symfony &#43; Docker, dall&#39;ambiente di sviluppo alla produzione</title>
      <link>https://alessandrolai.dev/talks/2018-pugmi-symfony-docker/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2018-pugmi-symfony-docker/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a test of &lt;a href=&#34;https://alessandrolai.dev/talks/2018-symfonyday-symfony-docker/&#34;&gt;the talk&lt;/a&gt; that I did the next month at SymfonyDay 2018, where there&amp;rsquo;s video recording available.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.2.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.2.0/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.2.0/</guid>
      <description>&lt;p&gt;Another minor version bump, another new feature!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.12.3: allow phpunit/php-file-iterator 2</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.12.3/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.12.3/</guid>
      <description>&lt;p&gt;Today I released a new small patch for Paraunit, fixing the support for a hidden dependency (&lt;code&gt;phpunit/php-file-iterator&lt;/code&gt;) which broke Paraunit with its 2.0 release.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.12.2: two more fixes</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.12.2/</link>
      <pubDate>Fri, 18 May 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.12.2/</guid>
      <description>&lt;p&gt;Today I released a new small patch for Paraunit, fixing an output bug and intercepting a new king of retryable exception.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adding Event Sourcing to an existing PHP project (for the right reasons)</title>
      <link>https://alessandrolai.dev/talks/2018-phpday-event-sourcing/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2018-phpday-event-sourcing/</guid>
      <description>&lt;p&gt;“Event Sourcing”, along with “CQRS” (Command Query Responsibility Segregation), have recently become trending terms, and now there is so much theory, blog posts and talks about them.&lt;/p&gt;&#xA;&lt;p&gt;However, most of these deal with the problem starting from an utopian assumption: having to write a project from scratch (greenfield), but at the same time with a high domain complexity right from the start, enough to justify the use of a complex technique like event sourcing and CQRS, which carry a fair amount of inherent complexity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.12.1: a small fix</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.12.1/</link>
      <pubDate>Thu, 05 Apr 2018 12:50:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.12.1/</guid>
      <description>&lt;p&gt;I had to release a fast fix for a problem introduced in the 0.12 release, due to the new behavior of the &lt;code&gt;--text&lt;/code&gt; and &lt;code&gt;--text-summary&lt;/code&gt; options. At first, it seemed that having an option with an optional argument was impossible, but I was able to do that anyway, and it spured a &lt;a href=&#34;https://github.com/symfony/symfony-docs/pull/9560https://github.com/symfony/symfony-docs/pull/9560&#34;&gt;PR to the Symfony Docs&lt;/a&gt; too!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.12: PHPUnit 7 support and coverage text summary option</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.12.0/</link>
      <pubDate>Thu, 05 Apr 2018 12:01:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.12.0/</guid>
      <description>&lt;p&gt;With this release, I had to do some under-the-hood changes, but we finally support PHPUnit 7; to do that I had to bump the minimum PHP required version to 7.1. I&amp;rsquo;ve also added a better support for text coverage report, adding the possibility of obtaining just the summary report.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Continuous deployment from GitLab CI to Kubernetes using Docker-in-Docker</title>
      <link>https://alessandrolai.dev/posts/continuous-deployment-from-gitlab-ci-to-k8s-using-docker-in-docker/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/posts/continuous-deployment-from-gitlab-ci-to-k8s-using-docker-in-docker/</guid>
      <description>In the last month, I&amp;rsquo;m working on two different PHP projects here at Facile.it: in the first one, which is new and still in development, I decided to adopt GitLab CI for the build, since we use GitLab CE for our Git repositories; I then created a continuous deployment pipeline for the staging environment, directly to a Kubernetes cluster, leveraging Docker Compose to make the configuration easier.&#xA;After, I decided to start migrating a previous, internal project of mine to the same approach, since it&amp;rsquo;s currently in production with a dumb approach that provokes some downtime during deployments; on the contrary, doing a rolling deployment with Kubernetes is surprisingly easy!</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.1.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.1.0/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.1.0/</guid>
      <description>&lt;p&gt;This time around we have a minor version bump, due to a new feature!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adding Event Sourcing to an existing PHP project (for the right reasons)</title>
      <link>https://alessandrolai.dev/talks/2018-pugmi-event-sourcing/</link>
      <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2018-pugmi-event-sourcing/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a test of a talk that I did &lt;a href=&#34;https://alessandrolai.dev/talks/2018-phpday-event-sourcing/&#34;&gt;on May at phphday 2018&lt;/a&gt; and also &lt;a href=&#34;https://alessandrolai.dev/talks/2018-symfonyday-event-sourcing/&#34;&gt;the next October in italian at SymfonyDay 2018&lt;/a&gt;, where there&amp;rsquo;s video recording available.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.11: add Symfony 4 support, some refactoring and a fix</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.11.0/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.11.0/</guid>
      <description>&lt;p&gt;This releases has nothing big on the outside, but a lot of code rework under the hood. The DI has been completely migrated from YAML to PHP (so no more &lt;code&gt;symfony/yaml&lt;/code&gt;) and support for Symfony 4 has been added; also, a small bug has been fixed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.0.3</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.0.3/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.0.3/</guid>
      <description>&lt;p&gt;Another bump is needed to the sub-package constraint. Also, a known issue with Composer has been discovered.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.10.1: report deprecations</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.10.1/</link>
      <pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.10.1/</guid>
      <description>&lt;p&gt;With this release, Paraunit replaces the suggestion of &lt;code&gt;facile-it/paraunit-testcase&lt;/code&gt; with &lt;code&gt;dama/doctrine-test-bundle&lt;/code&gt;; also there&amp;rsquo;s a new feature that will report any test failure due to deprecation warnings catched by the Symfony PHPUnit Bridge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to gradually upgrade toward PHPUnit 6 with namespaced classes</title>
      <link>https://alessandrolai.dev/posts/phpunit-upgrade-namespace/</link>
      <pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/posts/phpunit-upgrade-namespace/</guid>
      <description>In the latest months I wrote multiple times, in different projects, code migrating PHPUnit toward major version 6. This upgrade is harder than the previous one, since in this version it was introduced a big breaking change: all classes got (finally!) namespaced.&#xA;This means that any usage of those classes in your project needs to be updated. It may seem a simple find &amp;amp; replace job, but since you need to introduce at least one use PHPUnit\Framework\TestCase line at the top of each one of your test classes, it&amp;rsquo;s a boring and a little more than trivial task; also, upgrading it in a single big jump may not be feasible or prudent, especially in the case of open source or distributed libraries, where backward compatibility and support for old PHP versions must be ensured.</description>
    </item>
    <item>
      <title>Paraunit 0.10: small fixes and improvements</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.10.0/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.10.0/</guid>
      <description>&lt;p&gt;With this release, I&amp;rsquo;m grouping a few fixes and improvements that I collected in the past month. Mainly, I&amp;rsquo;ve fixed the &lt;code&gt;--debug&lt;/code&gt; option and the &lt;code&gt;--text-to-console&lt;/code&gt; coverage output. Also, now the logo is optional, and at the end of each line it&amp;rsquo;s printed a partial count of executed tests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.0.2</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.0.2/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.0.2/</guid>
      <description>&lt;p&gt;Another small issue solved with a small patch, and PHP 7.2 support comes along!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.0.1</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.0.1/</link>
      <pubDate>Thu, 06 Jul 2017 00:01:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.0.1/</guid>
      <description>&lt;p&gt;Same day of the first release, a small patch follows!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.9.1: a small fix in the header</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.9.1/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.9.1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.9.1&#34;&gt;Paraunit 0.9.1&lt;/a&gt; has been released with a really small improvement: I wnated to show a pretty, short version string in the header, when launching Paraunit. I recently started using Ocramius&amp;rsquo; package to do it, but it didn&amp;rsquo;t provide that feature, and he was adamant about not implementing it in the future.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.9.2 and 0.8.3: missing dependencies</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.9.2/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.9.2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.9.2&#34;&gt;Paraunit 0.9.2&lt;/a&gt; and &lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.8.3&#34;&gt;Paraunit 0.8.3&lt;/a&gt; has been released to fix a nasty little bug that I got reported to me: two dependencies were missing and the CI missed that due to the fact that both were required by dev dependencies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pretty Package Versions 1.0</title>
      <link>https://alessandrolai.dev/releases/pretty-package-versions/1.0.0/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/pretty-package-versions/1.0.0/</guid>
      <description>&lt;p&gt;This is the first release of this package!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.9: PHP 7, PHPUnit 6 and the pipelines</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.9.0/</link>
      <pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.9.0/</guid>
      <description>&lt;p&gt;After a long time and a lot of work, &lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.9&#34;&gt;Paraunit 0.9&lt;/a&gt; has been released. This release is a big step ahead: now Paraunit runs with &lt;strong&gt;PHPUnit 6&lt;/strong&gt;, and support to older versions is dropped; this also means that the &lt;strong&gt;minimum supported PHP version is now 7.0&lt;/strong&gt;, and the minimum version of the &lt;strong&gt;Symfony components is bumped to 2.7&lt;/strong&gt;, since older versions are out of support since may.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why type hints and interfaces are not visual debt</title>
      <link>https://alessandrolai.dev/posts/visual-debt-typehints/</link>
      <pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/posts/visual-debt-typehints/</guid>
      <description>A few days ago I stumbled on a strange tweet that was highlighting a controversy about scalar type hints.&#xA;After asking references about this, someone alluded to this very short video: &amp;ldquo;PHP Bits: Visual Debt&amp;rdquo; (it&amp;rsquo;s only 3 minutes, please watch it before continue reading). After that, the author of the video was dragged into the conversation, and it blew up into a big tweetstorm in the following few hours.</description>
    </item>
    <item>
      <title>Paraunit 0.8.2: avoid failures due to warnings</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.8.2/</link>
      <pubDate>Thu, 26 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.8.2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.8.2&#34;&gt;Paraunit 0.8.2&lt;/a&gt; has been released to fix an issued caused by an unwanted overwrite of the &lt;code&gt;write()&lt;/code&gt; method in the &lt;code&gt;LogWriter&lt;/code&gt; class.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.8.1: fixed regression with Symfony</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.8.1/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.8.1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.8.2&#34;&gt;Paraunit 0.8.1&lt;/a&gt; has been released to fix a small regression that happens when running functional tests in a Symfony project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.8: PHAR continuous delivery</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.8.0/</link>
      <pubDate>Tue, 24 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.8.0/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.8&#34;&gt;Paraunit 0.8&lt;/a&gt; has been released!&#xA;With this release I added the continuous integration: at each Git tag, the Travis build prepares, signs and uploads to the GitHub releases page Paraunit&amp;rsquo;s PHAR. Thanks to &lt;a href=&#34;https://andreas.heigl.org/2017/01/19/encrypt-a-build-result-automaticaly/&#34;&gt;Andreas Heigl&lt;/a&gt; that made this not only possible, but very straightforward to implement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.7.4: PHAR release</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.7.4/</link>
      <pubDate>Wed, 11 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.7.4/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.7.4&#34;&gt;Paraunit 0.7.4&lt;/a&gt; has just been released. This patch version add a simple but very useful functionality, the string filtering of tests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.7.3: PHAR release</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.7.3/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.7.3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.7.4&#34;&gt;Paraunit 0.7.3&lt;/a&gt; has just been released, and from now on with a PHAR version too, GPG signed! You will always be able to download it from the &lt;a href=&#34;https://github.com/facile-it/paraunit/releases/latest&#34;&gt;latest GitHub release page&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.7.1: coverage in text format</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.7.1/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.7.1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.7.1&#34;&gt;Paraunit 0.7.1&lt;/a&gt; has just been released; this is just a minor release that adds a new useful feature: the &lt;strong&gt;text format&lt;/strong&gt; for the coverage. You can either use it on screen as an integration tool (see Jenkins, GitLab), or save it as a file. Since there is a small limitation in CLI options handling by the Symfony component, this feature is implemented through two separate options.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.7.2: coverage in text format</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.7.2/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.7.2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.7.2&#34;&gt;Paraunit 0.7.2&lt;/a&gt; has just been released with a minor fix: colored output has been disabled from text coverage output to console, since it may cause incompatibilities. I will think of a way to re-enable it if possible in later releases.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.7: test coverage in parallel</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.7.0/</link>
      <pubDate>Mon, 12 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.7.0/</guid>
      <description>&lt;p&gt;Finally, &lt;a href=&#34;https://github.com/facile-it/paraunit/releases/tag/0.7&#34;&gt;Paraunit 0.7&lt;/a&gt; has been released!&#xA;This version includes the long awaited &lt;strong&gt;coverage feature&lt;/strong&gt;: now you can collect your test coverage running your tests&#xA;in parallel!&lt;/p&gt;&#xA;&lt;p&gt;Along with this new huge feature, here comes a lot of new fixes and changes: for example, now a lot of default PHPUnit&#xA;options can be used and they will be passed along to the single PHPUnit processes that Paraunit spawns; also, now we&#xA;&lt;strong&gt;officially support Windows&lt;/strong&gt;, and we added an &lt;a href=&#34;https://ci.appveyor.com/project/Jean85/paraunit&#34;&gt;Appveyor CI build&lt;/a&gt; to&#xA;do that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.6.2</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.6.2/</link>
      <pubDate>Mon, 24 Oct 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.6.2/</guid>
      <description>&lt;p&gt;Paraunit 0.6.2 has been released! This version include a fix in the choice of the dir for the partial test results, that&#xA;caused issues while on non-Linux systems. Some minor fix are present too, and now Paraunit shows the right version when&#xA;launched.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bug hunting with Git Bisect</title>
      <link>https://alessandrolai.dev/talks/2016-nomadphp-bug-hunting-git-bisect/</link>
      <pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2016-nomadphp-bug-hunting-git-bisect/</guid>
      <description>&lt;p&gt;Bugs are introduced in our code almost everyday, one way or another, even if we do our best to avoid it.&lt;/p&gt;&#xA;&lt;p&gt;Often, we need to identify where a bug originated to fix it, but we have to sift through a long history of commits to do that. Git comes to the rescue!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.6.1</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.6.1/</link>
      <pubDate>Fri, 10 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.6.1/</guid>
      <description>&lt;p&gt;Paraunit 0.6.1 has been released! The main improvement on the user side is the extension of the Symfony package constraint,&#xA;to allow the full 3.x series to be used with! The coverage feature is still in the works, I hope to release 0.7 with it&#xA;this summer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How PHP 7 &amp; TDD helped me sleep better</title>
      <link>https://alessandrolai.dev/posts/how-php-7-tdd-helped-me-sleep-better/</link>
      <pubDate>Tue, 07 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/posts/how-php-7-tdd-helped-me-sleep-better/</guid>
      <description>The enemies of programming As many of you will agree with me, sleep deprivation is the enemy of programming.&#xA;Maybe we fear only one thing more than that: being interrupted.&#xA;While writing code we have to think really hard, we use complex abstractions, we go through long business workflows and so on&amp;hellip; fatigue and interruptions are the main enemies of those in this line of work.&#xA;My experience On my day job, I do all this mental juggling on a pretty big project, which is based on PHP 5.</description>
    </item>
    <item>
      <title>Paraunit 0.6</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.6.0/</link>
      <pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.6.0/</guid>
      <description>&lt;p&gt;Paraunit 0.6 has been released! In the meantime, the coverage feature is being developed on its branch, I hope to have&#xA;it working soon and release it in 0.7.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A (small) Hexagonal architecture inside a Symfony application</title>
      <link>https://alessandrolai.dev/talks/2016-facile-it-small-hexagonal-architecture-symfony/</link>
      <pubDate>Fri, 18 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2016-facile-it-small-hexagonal-architecture-symfony/</guid>
      <description></description>
    </item>
    <item>
      <title>Paraunit 0.5</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.5.0/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.5.0/</guid>
      <description>&lt;p&gt;Paraunit 0.5 has been released!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.4.4</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.4.4/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.4.4/</guid>
      <description>&lt;p&gt;Paraunit 0.4.4 has been released!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.4.3</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.4.3/</link>
      <pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.4.3/</guid>
      <description>&lt;p&gt;Paraunit 0.4.3 has been released!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.4.2</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.4.2/</link>
      <pubDate>Mon, 19 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.4.2/</guid>
      <description>&lt;p&gt;Paraunit 0.4.2 has been released!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit: test paralleli, Doctrine e le fixture</title>
      <link>https://alessandrolai.dev/posts/paraunit/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/posts/paraunit/</guid>
      <description>Questo articolo è la sintesi di un talk presentato al SymfonyDay 2015; potete trovare le slide qui.&#xA;I test e la loro durata Sviluppare applicazioni scrivendo test e facendo Test Driven Development è un&amp;rsquo;ottima pratica, e dà parecchie soddisfazioni. Con l&amp;rsquo;andare del tempo, si fa crescere la suite di test del proprio progetto, cercando di aumentarne la copertura e l&amp;rsquo;efficacia e si scrivono nuovi test corrispondenti alle nuove funzionalità che vengono man mano sviluppate.</description>
    </item>
    <item>
      <title>Paraunit: Test paralleli, Doctrine e le fixture</title>
      <link>https://alessandrolai.dev/talks/2015-symfonyday-paraunit/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2015-symfonyday-paraunit/</guid>
      <description>&lt;p&gt;Ogni sviluppatore vorrebbe lavorare con una suite di test sempre più grande e con una coverage sempre più alta del proprio codice; ma una suite che impiega troppo tempo a completarsi diventa controproducente.&lt;/p&gt;&#xA;&lt;p&gt;La soluzione normalmente proposta è quella di eseguire più test in parallelo, ed esistono già alcuni strumenti che lo permettono.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit: Test paralleli, Doctrine e le fixture</title>
      <link>https://alessandrolai.dev/talks/2015-pugmi-paraunit/</link>
      <pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/talks/2015-pugmi-paraunit/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a test of &lt;a href=&#34;https://alessandrolai.dev/talks/2015-symfonyday-paraunit/&#34;&gt;the talk&lt;/a&gt; that I did the next month at SymfonyDay 2015, where there&amp;rsquo;s video recording available.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paraunit 0.4.1</title>
      <link>https://alessandrolai.dev/releases/paraunit/0.4.1/</link>
      <pubDate>Wed, 23 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://alessandrolai.dev/releases/paraunit/0.4.1/</guid>
      <description>&lt;p&gt;Paraunit 0.4.1 has been released!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
